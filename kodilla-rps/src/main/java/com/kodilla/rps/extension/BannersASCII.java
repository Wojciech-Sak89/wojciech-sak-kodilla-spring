package com.kodilla.rps.extension;

public class BannersASCII {

    //weapons
    public void scissorsText() {
        System.out.println(" ____   ____ ___ ____ ____   ___  ____  ____  \n" +
                "/ ___| / ___|_ _/ ___/ ___| / _ \\|  _ \\/ ___| \n" +
                "\\___ \\| |    | |\\___ \\___ \\| | | | |_) \\___ \\ \n" +
                " ___) | |___ | | ___) |__) | |_| |  _ < ___) |\n" +
                "|____/ \\____|___|____/____/ \\___/|_| \\_\\____/ ");
    }

    public void rockText() {
        System.out.println(" ____   ___   ____ _  __\n" +
                "|  _ \\ / _ \\ / ___| |/ /\n" +
                "| |_) | | | | |   | ' / \n" +
                "|  _ <| |_| | |___| . \\ \n" +
                "|_| \\_\\\\___/ \\____|_|\\_\\");
    }

    public void paperText() {
        System.out.println(" ____   _    ____  _____ ____  \n" +
                "|  _ \\ / \\  |  _ \\| ____|  _ \\ \n" +
                "| |_) / _ \\ | |_) |  _| | |_) |\n" +
                "|  __/ ___ \\|  __/| |___|  _ < \n" +
                "|_| /_/   \\_\\_|   |_____|_| \\_\\");
    }

    public void spockText() {
        System.out.println(" ____  ____   ___   ____ _  __\n" +
                "/ ___||  _ \\ / _ \\ / ___| |/ /\n" +
                "\\___ \\| |_) | | | | |   | ' / \n" +
                " ___) |  __/| |_| | |___| . \\ \n" +
                "|____/|_|    \\___/ \\____|_|\\_\\");
    }

    public void lizardText() {
        System.out.println(" _     ___ _____   _    ____  ____  \n" +
                "| |   |_ _|__  /  / \\  |  _ \\|  _ \\ \n" +
                "| |    | |  / /  / _ \\ | |_) | | | |\n" +
                "| |___ | | / /_ / ___ \\|  _ <| |_| |\n" +
                "|_____|___/____/_/   \\_\\_| \\_\\____/ ");
    }

    //actions
    public void crushesActionText() {
        System.out.println("                     _               \n" +
                "  ___ _ __ _   _ ___| |__   ___  ___ \n" +
                " / __| '__| | | / __| '_ \\ / _ \\/ __|\n" +
                "| (__| |  | |_| \\__ \\ | | |  __/\\__ \\\n" +
                " \\___|_|   \\__,_|___/_| |_|\\___||___/");
    }

    public void cutsActionText() {
        System.out.println("            _       \n" +
                "  ___ _   _| |_ ___ \n" +
                " / __| | | | __/ __|\n" +
                "| (__| |_| | |_\\__ \\\n" +
                " \\___|\\__,_|\\__|___/");
    }

    public void decapitatesActionText() {
        System.out.println("     _                      _ _        _            \n" +
                "  __| | ___  ___ __ _ _ __ (_) |_ __ _| |_ ___  ___ \n" +
                " / _` |/ _ \\/ __/ _` | '_ \\| | __/ _` | __/ _ \\/ __|\n" +
                "| (_| |  __/ (_| (_| | |_) | | || (_| | ||  __/\\__ \\\n" +
                " \\__,_|\\___|\\___\\__,_| .__/|_|\\__\\__,_|\\__\\___||___/");
    }

    public void coversActionText() {
        System.out.println("  ___ _____   _____ _ __ ___ \n" +
                " / __/ _ \\ \\ / / _ \\ '__/ __|\n" +
                "| (_| (_) \\ V /  __/ |  \\__ \\\n" +
                " \\___\\___/ \\_/ \\___|_|  |___/");
    }

    public void disprovesActionText() {
        System.out.println("     _ _                                   \n" +
                "  __| (_)___ _ __  _ __ _____   _____  ___ \n" +
                " / _` | / __| '_ \\| '__/ _ \\ \\ / / _ \\/ __|\n" +
                "| (_| | \\__ \\ |_) | | | (_) \\ V /  __/\\__ \\\n" +
                " \\__,_|_|___/ .__/|_|  \\___/ \\_/ \\___||___/\n" +
                "            |_| ");
    }

    public void smashesActionText() {
        System.out.println("                         _               \n" +
                " ___ _ __ ___   __ _ ___| |__   ___  ___ \n" +
                "/ __| '_ ` _ \\ / _` / __| '_ \\ / _ \\/ __|\n" +
                "\\__ \\ | | | | | (_| \\__ \\ | | |  __/\\__ \\\n" +
                "|___/_| |_| |_|\\__,_|___/_| |_|\\___||___/");
    }

    public void vaporizesActionText() {
        System.out.println("                             _              \n" +
                "__   ____ _ _ __   ___  _ __(_)_______  ___ \n" +
                "\\ \\ / / _` | '_ \\ / _ \\| '__| |_  / _ \\/ __|\n" +
                " \\ V / (_| | |_) | (_) | |  | |/ /  __/\\__ \\\n" +
                "  \\_/ \\__,_| .__/ \\___/|_|  |_/___\\___||___/\n" +
                "           |_|  ");
    }

    public void eatsActionText() {
        System.out.println("            _       \n" +
                "  ___  __ _| |_ ___ \n" +
                " / _ \\/ _` | __/ __|\n" +
                "|  __/ (_| | |_\\__ \\\n" +
                " \\___|\\__,_|\\__|___/");
    }

    public void poisonsActionText() {
        System.out.println("             _                     \n" +
                " _ __   ___ (_)___  ___  _ __  ___ \n" +
                "| '_ \\ / _ \\| / __|/ _ \\| '_ \\/ __|\n" +
                "| |_) | (_) | \\__ \\ (_) | | | \\__ \\\n" +
                "| .__/ \\___/|_|___/\\___/|_| |_|___/\n" +
                "|_|  ");
    }

    public void playerWins() {
        System.out.println("    ____  __                     \n" +
                "   / __ \\/ /___ ___  _____  _____\n" +
                "  / /_/ / / __ `/ / / / _ \\/ ___/\n" +
                " / ____/ / /_/ / /_/ /  __/ /    \n" +
                "/_/   /_/\\__,_/\\__, /\\___/_/     \n" +
                "              /____/             \n" +
                " _       _______   _______\n" +
                "| |     / /  _/ | / / ___/\n" +
                "| | /| / // //  |/ /\\__ \\ \n" +
                "| |/ |/ // // /|  /___/ / \n" +
                "|__/|__/___/_/ |_//____/  ");
    }

    public void cpuWins() {
        System.out.println("   __________  __  __   _       _______   _______\n" +
                "  / ____/ __ \\/ / / /  | |     / /  _/ | / / ___/\n" +
                " / /   / /_/ / / / /   | | /| / // //  |/ /\\__ \\ \n" +
                "/ /___/ ____/ /_/ /    | |/ |/ // // /|  /___/ / \n" +
                "\\____/_/    \\____/     |__/|__/___/_/ |_//____/  ");
    }
}
